version: "2"

services:

    chiminey:
        restart: on-failure:5
        build: chiminey-portal
        image: chiminey
        # links:
        #     #- db:db
        #     #- redis:redis
        #     - nginxamb:nginxamb
        command:
            - "gunicorn"
        ports:
            - "50000:22"
        expose:
            - "22"
        volumes:
            - srcstore:/opt/chiminey/current
            - chimineystore:/var/chiminey/remotesys
            - logstore:/logs
        depends_on:
            - db
            - redis
        environment:
            - DJANGO_DEBUG=$DJANGO_DEBUG
            - APIHOST=http://nginx/
            - CHIMINEY_LOG_FILE=$CHIMINEY_LOG_FILE
            - LOGGER_LEVEL=$CHIMINEY_LOGGER_LEVEL
            - GUNICORN_LOG_LEVEL=$GUNICORN_LOG_LEVEL
            - CELERY_POLL_TIME=$CELERY_POLL_TIME
            - DB_ENV_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        env_file: .env
        networks:
            - chiminey

    celery:
        restart: on-failure:5
        build: chiminey-portal
        image: chiminey
        command:
            - "celery"
        volumes:
            - chimineystore:/var/chiminey/remotesys
            - varstore:/var/run/chiminey
            - logstore:/logs
            - srcstore:/opt/chiminey/current
        depends_on:
            - db
            - redis
        environment:
            - DJANGO_DEBUG=$DJANGO_DEBUG
            - CHIMINEY_LOG_FILE=$CELERY_LOG_FILE
            - LOGGER_LEVEL=$CELERY_LOGGER_LEVEL
            - CELERY_POLL_TIME=$CELERY_POLL_TIME
            - DB_ENV_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        env_file: .env
        networks:
            - chiminey

    beat:
        restart: on-failure:5
        build: chiminey-portal
        image: chiminey
        command:
            - "beat"
        depends_on:
            - db
            - redis
            - celery
        volumes:
            - varstore:/var/run/beat
            - chimineystore:/var/chiminey/remotesys
            - logstore:/logs
            - srcstore:/opt/chiminey/current
        environment:
            - DJANGO_DEBUG=$DJANGO_DEBUG
            - CHIMINEY_LOG_FILE=$BEAT_LOG_FILE
            - LOGGER_LEVEL=$BEAT_LOGGER_LEVEL
            - CELERY_POLL_TIME=$CELERY_POLL_TIME
            - DB_ENV_POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        env_file: .env
        networks:
            - chiminey

    nginx:
        restart: on-failure:5
        build: chiminey-nginx
        image: chiminey-nginx
        depends_on:
            - db
            - redis
            - chiminey
        volumes_from:
            - chiminey:ro
        volumes:
            - varstore:/var/run/beat
            - chimineystore:/var/chiminey/remotesys
            - logstore:/logs
            #- srcstore:/opt/chiminey/current
            - ./chiminey-nginx/certs:/opt/certs:ro
        # expose:
        #     - "5601"
        #     - "80"
        #     - "443"
        #     - "5555"
        ports:
            - "80:80"
            - "443:443"
            - "5601:5601"
            - "6666:5555"
        networks:
            - chiminey

        env_file: .env

    # nginxamb:
    #     restart: on-failure:5
    #     image: cpuguy83/docker-grand-ambassador
    #     depends_on:
    #         - nginx
    #     ports:
    #         - "80:80"
    #         - "443:443"
    #         - "5601:5601"
    #         - "6666:5555"
    #     volumes:
    #         - /var/run/docker.sock:/var/run/docker.sock
    #     environment:
    #         - RABBITMQ_PASS=$RABBITMQ_PASS
    #     command:
    #         - "-name=dockerchiminey_nginx_1"
    #     networks:
    #         - chiminey
    #     env_file: .env

    db:
        restart: on-failure:5
        image: postgres:9.4.5
        volumes:
            - dbstore:/var/lib/postgresql
        environment:
            - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
        networks:
            - chiminey
        env_file: .env

    redis:
        restart: on-failure:5
        image: redis:3.0.5
        volumes:
            - redisstore:/data
        expose:
            - "6379"
        networks:
            - chiminey
        env_file: .env


    monitor:
        restart: on-failure:5
        build: chiminey-monitor
        depends_on:
            - redis
            - celery
        expose:
            - "5555"
        environment:
            - CELERY_BROKER_URL=redis://redis:6379//
        command:
            - "--broker_api=redis://redis:6379//"
            #   - "--broker=redis://redis:6379//"
            - "--basic_auth=chiminey:pass"
            #    - "--persistent=True"
        networks:
            - chiminey
        env_file: .env

    makecerts:
        restart: never
        build: makecerts
        volumes:
            - ./chiminey-nginx/certs:/opt/certs
        command:
            "/run.sh"
        networks:
            - chiminey
        env_file: .env


    ssh:
        image: million12/ssh
        ports:
            - "60000:22"
        environment:
            - ROOT_PASS=$SSH_PASS
        depends_on:
            - chiminey
        volumes:
            - chimineystore:/var/chiminey/remotesys
            - srcstore:/opt/chiminey/current
        networks:
            - chiminey
        env_file: .env

    # elasticsearch:
    #  restart: on-failure:5
    #  image: denibertovic/elasticsearch
    #  ports:
    #      - 9200:9200
    #      - 9300:9300
    #  volumes:
    #      - ./logs/elasticsearch:/opt/elasticsearch/logs
    #      - ./config-examples/elasticsearch:/opt/elasticsearch/config
    #      - ./data/elasticsearch:/opt/elasticsearch/data
    #
    # logstash:
    #   restart: on-failure:5
    #   image: denibertovic/logstash
    #   links:
    #       - elasticsearch
    #   volumes:
    #       - ./config-examples/logstash:/opt/conf
    #       - ./certs:/opt/certs
    #       - ./logs/logstash:/opt/logs
    #   volumes_from:
    #       - logsstore
    #
    # kibana:
    #   restart: on-failure:5
    #   image: denibertovic/kibana
    #   links:
    #       - elasticsearch:elasticsearch
    #   volumes:
    #       - ./logs/kibana:/logs
    #       - ./config-examples/kibana:/kibana/config
    #   expose:

    # #       - 5601
    # cadvisor:
    #    restart: on-failure:5
    #    privileged: true
    #    image: google/cadvisor:latest
    #    volumes:
    #      - /:/rootfs:ro
    #      - /var/run:/var/run:rw
    #      - /sys:/sys:ro
    #      - /var/lib/docker/:/var/lib/docker:ro
    #      - /cgroup:/cgroup:ro
    #    #command:
    #      #- '-storage_driver="elasticsearch"'
    #      #- "-alsologtostderr=true"
    #      #- '-storage_driver_es_host="https://elasticsearch:9200"'
    #    expose:
    #      - 8080

volumes:

    srcstore:
    logstore:
    varstore:
    dbstore:
    chimineystore:
    redisstore:

networks:
    chiminey:
        driver: bridge
